/*
 * Copyright 2015 Hongxin Telecommunication Technologies Co, Ltd.,
 * Wuhan, Hubei, China. All rights reserved.
 */

 /*
 * MainFrame.java
 *
 * Created on 2017-8-3, 11:08:38
 */
package com.hxct.smartnotify;

import com.hxct.entity.AlertEntity;
import com.hxct.entity.GateWayEntity;
import com.hxct.entity.AlertnotifyEntity;
import com.hxct.notify.NotifyThread;
import com.hxct.notify.QueueLink;
import com.hxct.util.ExcelUtil;
import com.hxct.util.MyBatisUtil;
import com.hxct.util.MyBatisUtil.DataSourceEnvironment;
import com.hxct.job.DevicePollManager;
import java.awt.AWTException;
import java.awt.Font;
import java.awt.Image;
import java.awt.MenuItem;
import java.awt.PopupMenu;
import java.awt.SystemTray;
import java.awt.Toolkit;
import java.awt.TrayIcon;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.File;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import org.apache.ibatis.session.SqlSession;
import org.jb2011.lnf.beautyeye.BeautyEyeLNFHelper;

/**
 *
 * @author chenwei
 */
public class MainFrame extends javax.swing.JFrame {

    private SqlSession sqliteSession = null;
    private DefaultTableModel gwTableModel;

    private Map<Integer, GateWayEntity> gwMaps = new HashMap<Integer, GateWayEntity>();
    private Map<String, GateWayEntity> gwMacs = new HashMap<String, GateWayEntity>();
    private List<GateWayEntity> allGws = null;
    private SystemTray tray;
    private TrayIcon trayIcon;
    private AlertnotifyEntity altNotify = null;
    private SimpleDateFormat sdfTime = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
    
    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
        setFont(new Font("微软雅黑", Font.PLAIN, 13));
        // 设置标题图标
        Toolkit tk = Toolkit.getDefaultToolkit();
        Image img = tk.getImage(getClass().getClassLoader().getResource("notify.png"));
        setIconImage(img);
        sqliteSession = MyBatisUtil.getSqlSessionFactory(DataSourceEnvironment.SQLITE).openSession();
        gwTableModel = (DefaultTableModel) gwTable.getModel();
        //hidden first column
        hiddenColumn(gwTable, 0);
        //end
        initTable();
        initNotify();
        if (SystemTray.isSupported()) {
            tray();
        }
    }

    private void hiddenColumn(javax.swing.JTable table, int idx) {
        TableColumnModel acColumnModel = table.getColumnModel();
        TableColumn column = acColumnModel.getColumn(idx);
        column.setMinWidth(0);
        column.setMaxWidth(0);
        column.setWidth(0);
        column.setPreferredWidth(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        gwName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        gwIpAddr = new javax.swing.JFormattedTextField();
        batchImport = new javax.swing.JButton();
        modifyGwBtn = new javax.swing.JButton();
        searchSpotBtn = new javax.swing.JButton();
        delGwBtn = new javax.swing.JButton();
        addGwBtn = new javax.swing.JButton();
        isCustom = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        setupLoc = new javax.swing.JFormattedTextField();
        totalline = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        gwTable = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        emailRb = new javax.swing.JRadioButton();
        smsRb = new javax.swing.JRadioButton();
        emailsmsRb = new javax.swing.JRadioButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        emailTitle = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        emailMsg = new javax.swing.JTextArea();
        jLabel17 = new javax.swing.JLabel();
        emailAddr = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        sendSvrAddr = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        senderMail = new javax.swing.JTextField();
        isSSL = new javax.swing.JCheckBox();
        jLabel24 = new javax.swing.JLabel();
        sendPwd = new javax.swing.JPasswordField();
        jPanel7 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        smsMsg = new javax.swing.JTextArea();
        jLabel18 = new javax.swing.JLabel();
        mobiles = new javax.swing.JTextField();
        startBtn = new javax.swing.JToggleButton();
        jLabel15 = new javax.swing.JLabel();
        intervalCb = new javax.swing.JComboBox();
        jLabel19 = new javax.swing.JLabel();
        pollingTimes = new javax.swing.JComboBox();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        modifyConfig = new javax.swing.JButton();
        noemailsms = new javax.swing.JRadioButton();
        weekedSnd = new javax.swing.JCheckBox();
        logPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        logTable = new javax.swing.JTable();
        clear = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("站点掉线告警通知系统");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel3.setText("站点名称");

        gwName.setMinimumSize(new java.awt.Dimension(100, 21));
        gwName.setPreferredSize(new java.awt.Dimension(100, 21));

        jLabel4.setText("网关IP地址");

        gwIpAddr.setPreferredSize(new java.awt.Dimension(80, 21));

        batchImport.setText("批量导入");
        batchImport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                batchImportActionPerformed(evt);
            }
        });

        modifyGwBtn.setText("修改");
        modifyGwBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyGwBtnActionPerformed(evt);
            }
        });

        searchSpotBtn.setText("查询");
        searchSpotBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchSpotBtnActionPerformed(evt);
            }
        });

        delGwBtn.setText("删除");
        delGwBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delGwBtnActionPerformed(evt);
            }
        });

        addGwBtn.setText("增加");
        addGwBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addGwBtnActionPerformed(evt);
            }
        });

        isCustom.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "请选择", "是", "否" }));

        jLabel8.setText("是否轮询");

        jLabel9.setText("安装位置");

        setupLoc.setPreferredSize(new java.awt.Dimension(80, 21));

        totalline.setText("累计&&行");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(totalline)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(batchImport)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(addGwBtn)
                        .addGap(10, 10, 10)
                        .addComponent(modifyGwBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(searchSpotBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(delGwBtn))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(gwName, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(gwIpAddr, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(setupLoc, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(isCustom, 0, 141, Short.MAX_VALUE)))
                .addGap(34, 34, 34))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(jLabel8))
                                    .addComponent(isCustom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(setupLoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(gwIpAddr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(gwName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(jLabel9)))
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(totalline))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(batchImport)
                                    .addComponent(modifyGwBtn)
                                    .addComponent(searchSpotBtn)
                                    .addComponent(delGwBtn)
                                    .addComponent(addGwBtn)))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))))
                .addContainerGap())
        );

        gwTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "站点名称", "网关IP地址", "安装位置", "是否轮询"
            }
        ));
        gwTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(gwTable);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("网关列表", jPanel2);

        jLabel10.setText("通知方式选择");

        buttonGroup1.add(emailRb);
        emailRb.setText("邮件");

        buttonGroup1.add(smsRb);
        smsRb.setText("短信");

        buttonGroup1.add(emailsmsRb);
        emailsmsRb.setText("邮件及短信");

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("邮件配置"));

        jLabel11.setText("邮件标题");

        jLabel16.setText("邮件内容");

        emailMsg.setColumns(20);
        emailMsg.setRows(5);
        jScrollPane3.setViewportView(emailMsg);

        jLabel17.setText("接收地址");

        jLabel22.setText("发送服务器地址");

        jLabel23.setText("发送邮箱");

        isSSL.setText("是否开启SSL");

        jLabel24.setText("密码");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel23)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(senderMail, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel22)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(sendSvrAddr, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(isSSL)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel24)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(sendPwd, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17)
                            .addComponent(jLabel11)
                            .addComponent(jLabel16))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3)
                            .addComponent(emailTitle)
                            .addComponent(emailAddr))))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(sendSvrAddr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(isSSL))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(senderMail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24)
                    .addComponent(sendPwd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(emailAddr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(emailTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)
                    .addComponent(jLabel16))
                .addContainerGap())
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("短信配置"));

        jLabel12.setText("短信内容");

        smsMsg.setColumns(20);
        smsMsg.setRows(5);
        jScrollPane5.setViewportView(smsMsg);

        jLabel18.setText("手机号码");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addGap(18, 18, 18)
                        .addComponent(mobiles))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane5)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(mobiles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE))
                .addContainerGap())
        );

        startBtn.setText("启动");
        startBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startBtnActionPerformed(evt);
            }
        });

        jLabel15.setText("设备轮询周期");

        intervalCb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "5分钟", "15分钟", "30分钟", "一小时", "12小时", "一天", "一周", "一月" }));

        jLabel19.setText("轮询连续失败最大次数");

        pollingTimes.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));

        jLabel20.setText("次");

        jLabel21.setText("注:$spotname$,$setuploc$,$ip$分别对应站点名称、安装位置、设备IP地址，请不要随意修改,但模板可以修改!");

        modifyConfig.setText("修改");
        modifyConfig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyConfigActionPerformed(evt);
            }
        });

        buttonGroup1.add(noemailsms);
        noemailsms.setText("不通知");

        weekedSnd.setText("周末发送通知");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel15))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(emailRb)
                                .addGap(18, 18, 18)
                                .addComponent(smsRb))
                            .addComponent(intervalCb, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(emailsmsRb, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(noemailsms, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel19)
                                .addGap(18, 18, 18)
                                .addComponent(pollingTimes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel20)
                        .addGap(86, 86, 86)
                        .addComponent(weekedSnd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(startBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, 750, Short.MAX_VALUE)
                        .addGap(27, 27, 27)
                        .addComponent(modifyConfig)
                        .addGap(18, 18, 18)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(intervalCb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19)
                            .addComponent(pollingTimes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel20)
                            .addComponent(weekedSnd))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel10)
                            .addComponent(emailRb)
                            .addComponent(smsRb)
                            .addComponent(emailsmsRb)
                            .addComponent(noemailsms)))
                    .addComponent(startBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel21))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(modifyConfig)))
                .addContainerGap())
        );

        jTabbedPane1.addTab("告警通知配置", jPanel5);

        logTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "序号", "发送时间", "站点名称", "通知类型", "设备IP", "位置信息", "发送状态"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(logTable);

        clear.setText("清除");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout logPanelLayout = new javax.swing.GroupLayout(logPanel);
        logPanel.setLayout(logPanelLayout);
        logPanelLayout.setHorizontalGroup(
            logPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 872, Short.MAX_VALUE)
            .addGroup(logPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(clear)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        logPanelLayout.setVerticalGroup(
            logPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(logPanelLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 454, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(clear)
                .addGap(4, 4, 4))
        );

        jTabbedPane1.addTab("通知日志记录", logPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt)//GEN-FIRST:event_formWindowClosing
    {//GEN-HEADEREND:event_formWindowClosing
        // 将托盘图标添加到系统的托盘实例中
        try {
            tray.add(trayIcon);
            System.out.println("关闭");
            setVisible(false);
        } catch (AWTException e1) {
            e1.printStackTrace();
        }
    }//GEN-LAST:event_formWindowClosing

    private void startBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startBtnActionPerformed
        if (startBtn.isSelected()) {
            if (!saveAltNotify()) {
                return;
            }
            startBtn.setText("关闭");
            JOptionPane.showMessageDialog(this, "任务已启动");
            int pollTimes = pollingTimes.getSelectedIndex() + 1;
            QueueLink<GateWayEntity> queue = new QueueLink<GateWayEntity>();
            int intervalIdx = intervalCb.getSelectedIndex();
            boolean weeked = weekedSnd.isSelected();
            for(GateWayEntity gw : allGws){
                if(gw.getIskey()==0){
                    continue;
                }
                DevicePollManager.startJob(sqliteSession, gw, intervalIdx, queue, weeked);
            }
            NotifyThread nt = new NotifyThread(this, queue, pollTimes, altNotify);
            Thread thread = new Thread(nt);
            thread.start();
            enableControl(false);
//            jTabbedPane1.setSelectedComponent(logPanel);
        } else {
            startBtn.setText("启动");
            JOptionPane.showMessageDialog(this, "任务已停止");
            enableControl(true);
            DevicePollManager.stopJob(true);
        }
    }//GEN-LAST:event_startBtnActionPerformed

    private void addGwBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addGwBtnActionPerformed
        GateWayEntity gwe = new GateWayEntity();

        Map<String, String> cmaps = new HashMap<String, String>();

        List<GateWayEntity> gwLst = sqliteSession.selectList("com.hxct.dao.GateWayDao.queryList", cmaps);
        if (gwLst.size() > 0) {
            JOptionPane.showMessageDialog(this, "站点已存在，请确认相关信息!");
            return;
        }

        gwe.setIpaddress(gwIpAddr.getText());
        gwe.setIskey(isCustom.getSelectedIndex() == 1 ? 1 : 0);

        gwe.setLocation(setupLoc.getText());

        gwe.setName(gwName.getText());

        sqliteSession.insert("com.hxct.dao.GateWayDao.save", gwe);
        sqliteSession.commit();
        gwTableModel.addRow(new Object[]{gwe.getId(), gwe.getName(), gwe.getIpaddress(), gwe.getLocation(), gwe.getIskey() == 0 ? "否" : "是"});
        gwMaps.put(gwe.getId(), gwe);
        this.allGws.add(gwe);
        totalline.setText("累计" + gwTableModel.getRowCount() + "行");
    }//GEN-LAST:event_addGwBtnActionPerformed

    private void delGwBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delGwBtnActionPerformed
        int selRow = gwTable.getSelectedRow();
        if (selRow > -1) {
            int idx = (Integer) gwTableModel.getValueAt(selRow, 0);
            GateWayEntity gws = gwMaps.get(idx);
            sqliteSession.delete("com.hxct.dao.GateWayDao.delete", idx);
            sqliteSession.commit();
            gwTableModel.removeRow(selRow);
            gwMaps.remove(idx);
            this.allGws.remove(gws);

            totalline.setText("累计" + gwTableModel.getRowCount() + "行");
        }
    }//GEN-LAST:event_delGwBtnActionPerformed

    private void searchSpotBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchSpotBtnActionPerformed
        String gwNa = gwName.getText();
        String gwIp = gwIpAddr.getText();
        //		String idx = apIdx.getText();
        int iskey = isCustom.getSelectedIndex() == 0 ? -1 : (isCustom.getSelectedIndex() == 1 ? 1 : 0);

        Map<String, String> cmaps = new HashMap<String, String>();
        cmaps.put("name", gwNa);
        cmaps.put("ipaddress", gwIp);
        //		cmaps.put("index", idx);
        cmaps.put("location", setupLoc.getText());
        cmaps.put("iskey", iskey + "");
        List<GateWayEntity> gwLst = sqliteSession.selectList("com.hxct.dao.GateWayDao.queryList", cmaps);
        gwMaps.clear();
        int rows = gwTableModel.getRowCount();
        for (int i = 0; i < rows; i++) {
            gwTableModel.removeRow(0);
        }
        for (GateWayEntity gw : gwLst) {
            gwMaps.put(gw.getId(), gw);
            gwTableModel.addRow(new Object[]{gw.getId(), gw.getName(), gw.getIpaddress(), gw.getLocation(), gw.getIskey() == null ? "否" : (gw.getIskey() == 1 ? "是" : "否")});
        }
        totalline.setText("累计" + gwLst.size() + "行");
    }//GEN-LAST:event_searchSpotBtnActionPerformed

    private void modifyGwBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyGwBtnActionPerformed
        int selRow = gwTable.getSelectedRow();
        if (selRow < 0) {
            JOptionPane.showMessageDialog(this, "请选择一个需要修改的站点");
            return;
        }
        GateWayEntity gws = gwMaps.get(gwTableModel.getValueAt(selRow, 0));
        GwDetailDialog adDialog = new GwDetailDialog(this, true, gws);
        adDialog.setLocationRelativeTo(null);
        adDialog.setVisible(true);
    }//GEN-LAST:event_modifyGwBtnActionPerformed

    /**
     *
     * 0行 0列 id 0行 1列 acid 0行 2列 index 0行 3列 cover 0行 4列 uptime 0行 5列 ownerunit
     * 0行 6列 contact 0行 7列 contactnumber 0行 8列 hotspotid 0行 9列 macaddr 0行 10列
     * ipaddress 0行 11列 name 0行 12列 location 0行 13列 longitude 0行 14列 latitude 0行
     * 15列 iskey 0行 16列 uppoeport 0行 17列 uppoedistance 0行 18列 gatewayloc 0行 19列
     * apsearial 0行 20列 type 0行 21列 model
     */
    private void batchImportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_batchImportActionPerformed
        new Thread(new Runnable() {
            @Override
            public void run() {
                //read file from xls
                JFileChooser fd = new JFileChooser();
                //fd.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
                fd.showOpenDialog(null);
                File file = fd.getSelectedFile();
                if (file != null) {
                    ArrayList<Map<Integer, Object>> result = ExcelUtil.readExcelByID(file);
                    for (Map<Integer, Object> map : result) {
                        //						Object ipaddr = map.get(10);
                        String gwName = (String) map.get(11);
                        String location = (String) map.get(12);
                        String isKey = (String) map.get(15);
                        int isKeyInt = 0;
                        if (isKey != null && isKey.equals("01")) {
                            isKeyInt = 1;
                        }
                        GateWayEntity gw = gwMacs.get("");
                        if (gw == null) {
                            gw = new GateWayEntity();
                            gw.setLocation(location);
                            gw.setName(gwName);
                            gw.setIskey(isKeyInt);
                            sqliteSession.insert("com.hxct.dao.GateWayDao.save", gw);
                            sqliteSession.commit();
                        } else {
                            gw.setLocation(location);
                            gw.setName(gwName);
                            sqliteSession.update("com.hxct.dao.GateWayDao.update", gw);
                            sqliteSession.commit();
                        }
                        gwMaps.put(gw.getId(), gw);
                        gwMacs.put("", gw);
                    }

                }
                JOptionPane.showMessageDialog(MainFrame.this, "批量导入结束");
            }
        }).start();
    }//GEN-LAST:event_batchImportActionPerformed

    private void modifyConfigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyConfigActionPerformed
        // TODO add your handling code here:
        if(saveAltNotify()){
            JOptionPane.showMessageDialog(this, "修改成功!");
        }else{
            JOptionPane.showMessageDialog(this, "修改失败!");
        }
    }//GEN-LAST:event_modifyConfigActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        // TODO add your handling code here:
        int size = logTable.getModel().getRowCount();
        for(int i=0;i<size;i++)
            ((DefaultTableModel)logTable.getModel()).removeRow(0);
    }//GEN-LAST:event_clearActionPerformed

    private boolean saveAltNotify() {
        int type = -1;
        if (emailRb.isSelected()) {
            type = 0;
        } else if (smsRb.isSelected()) {
            type = 1;
        } else if (emailsmsRb.isSelected()) {
            type = 2;
        } else if (noemailsms.isSelected()) {
            type = 3;
        }
//		if(type==-1)
//		{
//                    JOptionPane.showMessageDialog(this, "请选择一种通知方式!");
//                    startBtn.setSelected(false);
//                    return false;
//		}
        if (altNotify == null) {
            altNotify = new AlertnotifyEntity();
        }
        altNotify.setType(type);
        altNotify.setSmtpserver(sendSvrAddr.getText());
        altNotify.setSmtpssl(isSSL.isSelected() ? 1 : 0);
        altNotify.setMailsender(senderMail.getText());
        altNotify.setMailpwd(sendPwd.getText());
        altNotify.setMailrecv(emailAddr.getText());
        altNotify.setMailtitle(emailTitle.getText());
        altNotify.setMailbody(emailMsg.getText());

        altNotify.setSmsrecvnumber(mobiles.getText());
        altNotify.setSmsmsg(smsMsg.getText());
        if (altNotify.getId() == null) {
            sqliteSession.insert("com.hxct.dao.AlertnotifyDao.save", altNotify);
        } else {
            sqliteSession.update("com.hxct.dao.AlertnotifyDao.update", altNotify);
        }
        sqliteSession.commit();
        return true;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                    try
                    { 
                        BeautyEyeLNFHelper.frameBorderStyle = BeautyEyeLNFHelper.FrameBorderStyle.generalNoTranslucencyShadow;
                        org.jb2011.lnf.beautyeye.BeautyEyeLNFHelper.launchBeautyEyeLNF();
                    } catch(Exception e)
                    { 
                    //TODO exception 
                    } 				
                MainFrame mf = new MainFrame();
                mf.setLocationRelativeTo(null);
                mf.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addGwBtn;
    private javax.swing.JButton batchImport;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton clear;
    private javax.swing.JButton delGwBtn;
    private javax.swing.JTextField emailAddr;
    private javax.swing.JTextArea emailMsg;
    private javax.swing.JRadioButton emailRb;
    private javax.swing.JTextField emailTitle;
    private javax.swing.JRadioButton emailsmsRb;
    private javax.swing.JFormattedTextField gwIpAddr;
    private javax.swing.JTextField gwName;
    private javax.swing.JTable gwTable;
    private javax.swing.JComboBox intervalCb;
    private javax.swing.JComboBox isCustom;
    private javax.swing.JCheckBox isSSL;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel logPanel;
    private javax.swing.JTable logTable;
    private javax.swing.JTextField mobiles;
    private javax.swing.JButton modifyConfig;
    private javax.swing.JButton modifyGwBtn;
    private javax.swing.JRadioButton noemailsms;
    private javax.swing.JComboBox pollingTimes;
    private javax.swing.JButton searchSpotBtn;
    private javax.swing.JTextField sendPwd;
    private javax.swing.JTextField sendSvrAddr;
    private javax.swing.JTextField senderMail;
    private javax.swing.JFormattedTextField setupLoc;
    private javax.swing.JTextArea smsMsg;
    private javax.swing.JRadioButton smsRb;
    private javax.swing.JToggleButton startBtn;
    private javax.swing.JLabel totalline;
    private javax.swing.JCheckBox weekedSnd;
    // End of variables declaration//GEN-END:variables

    private void initTable() {
        allGws = sqliteSession.selectList("com.hxct.dao.GateWayDao.queryList");

        totalline.setText("累计0行");
    }

    public boolean modifyGwInfo(GateWayEntity gwe) {
        sqliteSession.update("com.hxct.dao.GateWayDao.update", gwe);
        sqliteSession.commit();
        gwMaps.put(gwe.getId(), gwe);
        int selRow = gwTable.getSelectedRow();
        gwTableModel.setValueAt(gwe.getId(), selRow, 0);
        gwTableModel.setValueAt(gwe.getName(), selRow, 1);
        gwTableModel.setValueAt(gwe.getIpaddress(), selRow, 2);
        gwTableModel.setValueAt(gwe.getLocation(), selRow, 3);
        gwTableModel.setValueAt(gwe.getIskey() == 1 ? "是" : "否", selRow, 4);
        return true;
    }
    
    public void addAlert(AlertEntity alt){
        int id = sqliteSession.insert("com.hxct.dao.AlertDao.save", alt);
        System.out.println("id is:"+id);
        sqliteSession.commit();
        ((DefaultTableModel)logTable.getModel()).addRow(new Object[]{alt.getId(), sdfTime.format(alt.getSndTime()), alt.getGwname(), alt.getType(), alt.getGwip(), alt.getGwloc(), true});
    }

    private void enableControl(boolean b) {
//        jTabbedPane1.setEnabled(b);
        sendSvrAddr.setEnabled(b);
        isSSL.setEnabled(b);
        senderMail.setEnabled(b);
        sendPwd.setEnabled(b);
        intervalCb.setEnabled(b);
        pollingTimes.setEnabled(b);
        emailRb.setEnabled(b);
        smsRb.setEnabled(b);
        emailsmsRb.setEnabled(b);
        emailAddr.setEnabled(b);
        emailTitle.setEnabled(b);
        emailMsg.setEnabled(b);
        mobiles.setEnabled(b);
        smsMsg.setEnabled(b);
        noemailsms.setEnabled(b);
        modifyConfig.setEnabled(b);
        batchImport.setEnabled(b);
        addGwBtn.setEnabled(b);
        modifyGwBtn.setEnabled(b);
        delGwBtn.setEnabled(b);
    }

    private void tray() {
        // 获得本操作系统托盘的实例
        tray = SystemTray.getSystemTray();
        // 显示在托盘中的图标
        ImageIcon icon = new ImageIcon(getClass().getClassLoader().getResource("notify.png"));
        // 构造一个右键弹出式菜单
        PopupMenu pop = new PopupMenu();
        MenuItem exit = new MenuItem("关闭程序");
        pop.add(exit);
        trayIcon = new TrayIcon(icon.getImage(), "站点设备监测告警系统\n版权所有：武汉虹信", pop);
        // 这句很重要，没有会导致图片显示不出来
        trayIcon.setImageAutoSize(true);
        trayIcon.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent e) {
                if (e.getClickCount() == 2) {
                    tray.remove(trayIcon);
                    setVisible(true);
                    // 还原成原来的窗口，而不是显示在任务栏
                    setExtendedState(NORMAL);
                }
            }
        });
        exit.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                tray.remove(trayIcon);
                System.exit(0);
            }
        });
    }

    private void initNotify() {
        altNotify = sqliteSession.selectOne("com.hxct.dao.AlertnotifyDao.queryObject", 1);
        if (altNotify != null) {
            Integer anType = altNotify.getType();
            if (anType != null) {
                switch (anType) {
                    case 0:
                        emailRb.setSelected(true);
                        break;
                    case 1:
                        smsRb.setSelected(true);
                        break;
                    case 2:
                        emailsmsRb.setSelected(true);
                        break;
                    default:
                        break;
                }
            }
            //email
            sendSvrAddr.setText(altNotify.getSmtpserver());
            isSSL.setSelected(altNotify.getSmtpssl() == 1);
            senderMail.setText(altNotify.getMailsender());
            sendPwd.setText(altNotify.getMailpwd());
            emailAddr.setText(altNotify.getMailrecv());
            emailTitle.setText(altNotify.getMailtitle());
            emailMsg.setText(altNotify.getMailbody());
            //sms
            mobiles.setText(altNotify.getSmsrecvnumber());
            smsMsg.setText(altNotify.getSmsmsg());
        }
    }
}
