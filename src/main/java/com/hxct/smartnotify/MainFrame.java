/*
 * Copyright 2015 Hongxin Telecommunication Technologies Co, Ltd.,
 * Wuhan, Hubei, China. All rights reserved.
 */

/*
 * MainFrame.java
 *
 * Created on 2017-8-3, 11:08:38
 */

package com.hxct.smartnotify;

import com.hxct.entity.AcEntity;
import com.hxct.entity.AccesspointEntity;
import com.hxct.entity.AlertnotifyEntity;
import com.hxct.notify.NotifyThread;
import com.hxct.notify.QueueLink;
import com.hxct.util.ExcelUtil;
import com.hxct.util.MyBatisUtil;
import com.hxct.util.MyBatisUtil.DataSourceEnvironment;
import com.hxrd.job.DevicePollManager;
import com.hxsnmp.api.ISnmpClientFacade;
import com.hxsnmp.api.ISnmpSession;
import com.hxsnmp.api.ISnmpSessionFactory;
import com.hxsnmp.api.ISnmpTargetFactory;
import com.hxsnmp.impl.Snmp4JClientFacade;
import java.awt.AWTException;
import java.awt.Image;
import java.awt.MenuItem;
import java.awt.PopupMenu;
import java.awt.SystemTray;
import java.awt.Toolkit;
import java.awt.TrayIcon;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import org.apache.ibatis.session.SqlSession;
import org.snmp4j.smi.VariableBinding;

/**
 *
 * @author chenwei
 */
public class MainFrame extends javax.swing.JFrame
{

	private SqlSession mysqlSession = null;
	private DefaultTableModel acTableModel;
	private DefaultTableModel apTableModel;

	private Map<Integer, AcEntity> acMaps = new HashMap<Integer, AcEntity>();
	private Map<Integer, AccesspointEntity> apMaps = new HashMap<Integer, AccesspointEntity>();
	private Map<String, AccesspointEntity> apMacs = new HashMap<String, AccesspointEntity>();
	private Map<String, Integer> idxMac = new HashMap<String, Integer>();
	private Map<Integer, ISnmpSession> allSnmpSessions = new HashMap<Integer, ISnmpSession>();
	private SystemTray tray;
	private TrayIcon trayIcon;	
	AlertnotifyEntity altNotify = null;
    /** Creates new form MainFrame */
    public MainFrame()
	{
        initComponents();
		// 设置标题图标
		Toolkit tk = Toolkit.getDefaultToolkit();
		Image img = tk.getImage(getClass().getClassLoader().getResource("notify.png"));
		setIconImage(img);
		mysqlSession = MyBatisUtil.getSqlSessionFactory(DataSourceEnvironment.MYSQL).openSession();
		acTableModel = (DefaultTableModel)acTable.getModel();
		apTableModel = (DefaultTableModel)apTable.getModel();
		//hidden first column
		hiddenColumn(acTable, 0);
		hiddenColumn(apTable, 0);
		//end
		initTable();
		initNotify();
		if(SystemTray.isSupported())
		{			
			tray();
		}
	}
	
	private void hiddenColumn(javax.swing.JTable table, int idx)
	{
        TableColumnModel acColumnModel = table.getColumnModel();
        TableColumn column = acColumnModel.getColumn(idx);
        column.setMinWidth(0);
        column.setMaxWidth(0);
        column.setWidth(0);
        column.setPreferredWidth(0);
	}

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        acName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        acIpAddr = new javax.swing.JFormattedTextField();
        jLabel5 = new javax.swing.JLabel();
        acModel = new javax.swing.JTextField();
        addAcBtn = new javax.swing.JButton();
        searchAcBtn = new javax.swing.JButton();
        modifyAcBtn = new javax.swing.JButton();
        delAcBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        acTable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        apName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        apIpAddr = new javax.swing.JFormattedTextField();
        jLabel6 = new javax.swing.JLabel();
        apMacAddr = new javax.swing.JFormattedTextField();
        batchImport = new javax.swing.JButton();
        modifyApBtn = new javax.swing.JButton();
        searchApBtn = new javax.swing.JButton();
        delApBtn = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        acCombo = new javax.swing.JComboBox();
        addApBtn = new javax.swing.JButton();
        isCustom = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        setupLoc = new javax.swing.JFormattedTextField();
        jLabel14 = new javax.swing.JLabel();
        aphotspot = new javax.swing.JTextField();
        totalline = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        apTable = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        emailRb = new javax.swing.JRadioButton();
        smsRb = new javax.swing.JRadioButton();
        emailsmsRb = new javax.swing.JRadioButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        emailTitle = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        emailMsg = new javax.swing.JTextArea();
        jLabel17 = new javax.swing.JLabel();
        emailAddr = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        sendSvrAddr = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        senderMail = new javax.swing.JTextField();
        isSSL = new javax.swing.JCheckBox();
        jLabel24 = new javax.swing.JLabel();
        sendPwd = new javax.swing.JPasswordField();
        jPanel7 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        smsMsg = new javax.swing.JTextArea();
        jLabel18 = new javax.swing.JLabel();
        mobiles = new javax.swing.JTextField();
        startBtn = new javax.swing.JToggleButton();
        jLabel15 = new javax.swing.JLabel();
        intervalCb = new javax.swing.JComboBox();
        jLabel19 = new javax.swing.JLabel();
        pollingTimes = new javax.swing.JComboBox();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("重点区域告警通知");
        addWindowListener(new java.awt.event.WindowAdapter()
        {
            public void windowClosing(java.awt.event.WindowEvent evt)
            {
                formWindowClosing(evt);
            }
        });

        jLabel1.setText("AC名称");

        acName.setMinimumSize(new java.awt.Dimension(100, 21));
        acName.setPreferredSize(new java.awt.Dimension(100, 21));

        jLabel2.setText("AC IP地址");

        acIpAddr.setPreferredSize(new java.awt.Dimension(80, 21));

        jLabel5.setText("设备型号");

        addAcBtn.setText("添加");
        addAcBtn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                addAcBtnActionPerformed(evt);
            }
        });

        searchAcBtn.setText("查询");
        searchAcBtn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                searchAcBtnActionPerformed(evt);
            }
        });

        modifyAcBtn.setText("修改");
        modifyAcBtn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                modifyAcBtnActionPerformed(evt);
            }
        });

        delAcBtn.setText("删除");
        delAcBtn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                delAcBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(acName, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addGap(9, 9, 9)
                        .addComponent(acIpAddr, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE))
                    .addComponent(acModel, javax.swing.GroupLayout.DEFAULT_SIZE, 293, Short.MAX_VALUE))
                .addGap(363, 363, 363)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(searchAcBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addAcBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(modifyAcBtn)
                    .addComponent(delAcBtn))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(acName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(acIpAddr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addAcBtn)
                    .addComponent(modifyAcBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(acModel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchAcBtn)
                    .addComponent(delAcBtn))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        acTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {
                "ID", "AC名称", "AC IP地址", "型号"
            }
        ));
        acTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(acTable);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 396, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("AC列表", jPanel1);

        jLabel3.setText("AP名称");

        apName.setMinimumSize(new java.awt.Dimension(100, 21));
        apName.setPreferredSize(new java.awt.Dimension(100, 21));

        jLabel4.setText("AP IP地址");

        apIpAddr.setPreferredSize(new java.awt.Dimension(80, 21));

        jLabel6.setText("AP MAC地址");

        apMacAddr.setPreferredSize(new java.awt.Dimension(80, 21));

        batchImport.setText("批量导入");
        batchImport.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                batchImportActionPerformed(evt);
            }
        });

        modifyApBtn.setText("修改");
        modifyApBtn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                modifyApBtnActionPerformed(evt);
            }
        });

        searchApBtn.setText("查询");
        searchApBtn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                searchApBtnActionPerformed(evt);
            }
        });

        delApBtn.setText("删除");
        delApBtn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                delApBtnActionPerformed(evt);
            }
        });

        jLabel7.setText("对应AC");

        acCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "请选择" }));

        addApBtn.setText("增加");
        addApBtn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                addApBtnActionPerformed(evt);
            }
        });

        isCustom.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "请选择", "是", "否" }));

        jLabel8.setText("是否关注");

        jLabel9.setText("安装位置");

        setupLoc.setPreferredSize(new java.awt.Dimension(80, 21));

        jLabel14.setText("热点信息");

        totalline.setText("累加&&行");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(totalline)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(batchImport)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(addApBtn)
                        .addGap(10, 10, 10)
                        .addComponent(modifyApBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(searchApBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(delApBtn)
                        .addGap(47, 47, 47))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(apName, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                            .addComponent(acCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(isCustom, 0, 142, Short.MAX_VALUE)
                            .addComponent(apIpAddr, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel14))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(aphotspot)
                            .addComponent(apMacAddr, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(setupLoc, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                        .addGap(26, 26, 26))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(apName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(apIpAddr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(apMacAddr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel9)
                        .addComponent(setupLoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(isCustom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel14)
                        .addComponent(aphotspot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(acCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(batchImport)
                        .addComponent(modifyApBtn)
                        .addComponent(searchApBtn)
                        .addComponent(delApBtn)
                        .addComponent(addApBtn))
                    .addComponent(totalline, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );

        apTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {
                "ID", "AP名称", "AP IP地址", "MAC地址", "对应AC", "热点名称", "AP安装位置", "是否重点AP"
            }
        ));
        apTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(apTable);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 372, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("AP列表", jPanel2);

        jLabel10.setText("通知方式选择");

        buttonGroup1.add(emailRb);
        emailRb.setText("邮件");

        buttonGroup1.add(smsRb);
        smsRb.setText("短信");

        buttonGroup1.add(emailsmsRb);
        emailsmsRb.setText("邮件及短信");

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("邮件配置"));

        jLabel11.setText("邮件标题");

        jLabel16.setText("邮件内容");

        emailMsg.setColumns(20);
        emailMsg.setRows(5);
        jScrollPane3.setViewportView(emailMsg);

        jLabel17.setText("接收地址");

        jLabel22.setText("发送服务器地址");

        jLabel23.setText("发送邮箱");

        isSSL.setText("是否开启SSL");

        jLabel24.setText("密码");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel23)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(senderMail, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel22)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(sendSvrAddr, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(isSSL)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel24)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(sendPwd, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17)
                            .addComponent(jLabel11)
                            .addComponent(jLabel16))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3)
                            .addComponent(emailTitle)
                            .addComponent(emailAddr))))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(sendSvrAddr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(isSSL))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(senderMail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24)
                    .addComponent(sendPwd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(emailAddr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(emailTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 62, Short.MAX_VALUE)
                    .addComponent(jLabel16))
                .addContainerGap())
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("短信配置"));

        jLabel12.setText("短信内容");

        smsMsg.setColumns(20);
        smsMsg.setRows(5);
        jScrollPane5.setViewportView(smsMsg);

        jLabel18.setText("手机号码");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addGap(18, 18, 18)
                        .addComponent(mobiles))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 750, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(mobiles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE))
                .addContainerGap())
        );

        startBtn.setText("启动");
        startBtn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                startBtnActionPerformed(evt);
            }
        });

        jLabel15.setText("设备轮询周期");

        intervalCb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "5分钟", "15分钟", "30分钟", "一小时", "12小时", "一天", "一周", "一月" }));

        jLabel19.setText("轮询连续失败最大次数");

        pollingTimes.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));

        jLabel20.setText("次");

        jLabel21.setText("注:$hotspot$,$setuploc$,$macaddr$分别对应热点位置、安装位置、设备Mac地址，请不要随意修改,但模板可以修改!");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel15))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(emailRb)
                                .addGap(39, 39, 39)
                                .addComponent(smsRb))
                            .addComponent(intervalCb, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(50, 50, 50)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(emailsmsRb)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel19)
                                .addGap(18, 18, 18)
                                .addComponent(pollingTimes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel20)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(startBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(intervalCb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19)
                            .addComponent(pollingTimes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel20))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(emailRb)
                            .addComponent(smsRb)
                            .addComponent(emailsmsRb)))
                    .addComponent(startBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel21)
                .addGap(20, 20, 20))
        );

        jTabbedPane1.addTab("告警通知配置", jPanel5);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addAcBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_addAcBtnActionPerformed
    {//GEN-HEADEREND:event_addAcBtnActionPerformed
        AcEntity ac = new AcEntity();
		ac.setName(acName.getText());
		ac.setIpaddr(acIpAddr.getText());
		ac.setModel(acModel.getText());
		ac.setReadco("public");
		ac.setWriteco("private");
		ac.setSnmpport(162);
		
//		AcDao acDao = mysqlSession.getMapper(AcDao.class);
//		acDao.save(ac);
//		mysqlSession.commit();
		
//		AcEntity ac1 = mysqlSession.selectOne("com.hxct.dao.AcDao.queryObject", 2);
		mysqlSession.insert("com.hxct.dao.AcDao.save", ac);
		mysqlSession.commit();
		acTableModel.addRow(new Object[]{ac.getId(), ac.getName(), ac.getIpaddr(), ac.getModel()});
		acMaps.put(ac.getId(), ac);
    }//GEN-LAST:event_addAcBtnActionPerformed

    private void modifyAcBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_modifyAcBtnActionPerformed
    {//GEN-HEADEREND:event_modifyAcBtnActionPerformed
        int selRow = acTable.getSelectedRow();
		if(selRow<0)
		{
			JOptionPane.showMessageDialog(this, "请选择一台需要修改的AC");
			return;
		}
		AcEntity acs = acMaps.get(acTableModel.getValueAt(selRow, 0));
		AcDetailDialog adDialog = new AcDetailDialog(this, true, acs);
		adDialog.setLocationRelativeTo(null);
		adDialog.setVisible(true);
    }//GEN-LAST:event_modifyAcBtnActionPerformed

    private void delAcBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_delAcBtnActionPerformed
    {//GEN-HEADEREND:event_delAcBtnActionPerformed
        int selRow = acTable.getSelectedRow();
		if(selRow>-1)
		{
			int idx = (Integer)acTableModel.getValueAt(selRow, 0);
			AcEntity acs = acMaps.get(idx);
			mysqlSession.delete("com.hxct.dao.AcDao.delete", idx);
			mysqlSession.commit();
			acTableModel.removeRow(selRow);
			acMaps.remove(idx);
		}
    }//GEN-LAST:event_delAcBtnActionPerformed

    private void searchAcBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_searchAcBtnActionPerformed
    {//GEN-HEADEREND:event_searchAcBtnActionPerformed
        String acNa = acName.getText();
		String acIp = acIpAddr.getText();
		String acMod = acModel.getText();
		Map<String, String> cmaps = new HashMap<String, String>();
		cmaps.put("name", acNa);
		cmaps.put("ipaddr", acIp);
		cmaps.put("model", acMod);
		List<AcEntity> acLst = mysqlSession.selectList("com.hxct.dao.AcDao.queryList", cmaps);
		acMaps.clear();
		int rows = acTableModel.getRowCount();
		for(int i=0;i<rows;i++)
		{
			acTableModel.removeRow(0);
		}
		for(AcEntity ac:acLst)
		{
			acMaps.put(ac.getId(), ac);
			acTableModel.addRow(new Object[]{ac.getId(), ac.getName(),ac.getIpaddr(),ac.getModel()});
		}
	
    }//GEN-LAST:event_searchAcBtnActionPerformed

/**
 * 
0行 0列  id
0行 1列  acid
0行 2列  index
0行 3列  cover
0行 4列  uptime
0行 5列  ownerunit
0行 6列  contact
0行 7列  contactnumber
0行 8列  hotspotid
0行 9列  macaddr
0行 10列  ipaddress
0行 11列  name
0行 12列  location
0行 13列  longitude
0行 14列  latitude
0行 15列  iskey
0行 16列  uppoeport
0行 17列  uppoedistance
0行 18列  gatewayloc
0行 19列  apsearial
0行 20列  type
0行 21列  model
 */			
    private void batchImportActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_batchImportActionPerformed
    {//GEN-HEADEREND:event_batchImportActionPerformed
		new Thread(new Runnable()
		{
			@Override
			public void run()
			{
				//read file from xls
				 JFileChooser fd = new JFileChooser();  
				 //fd.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);  
				 fd.showOpenDialog(null);  
				 File file = fd.getSelectedFile();
				 if(file != null)
				 {
					ArrayList<Map<Integer, Object>> result = ExcelUtil.readExcelByID(file);
					for(Map<Integer, Object> map:result)
					{
						String acid = (String)map.get(1);
						String idx = (String)map.get(2);
						String cover = (String)map.get(3);
						String ownerunit = (String)map.get(5);
						String hotspot = (String)map.get(8);
						String macaddr = ((String)map.get(9)).toLowerCase();
//						Object ipaddr = map.get(10);
						String apName = (String)map.get(11);
						String location = (String)map.get(12);
						String isKey = (String)map.get(15);
						int isKeyInt = 0;
						if(isKey!=null&&isKey.equals("01"))
						{
							isKeyInt = 1;
						}
						Integer apIdx = idxMac.get(macaddr);
						if(apIdx==null)//在AC中找不到的AP，不导入，忽略不计
						{
							System.out.println("没找到的mac地址:"+macaddr);
							continue;
						}
						int acIdInt = 0;
						if(acid!=null)
						{
							acIdInt = Integer.parseInt(acid.split("\\.")[0]);
						}
						
						AccesspointEntity ap = apMacs.get(macaddr);
						if(ap==null)
						{
							ap = new AccesspointEntity();
							ap.setAcid(acIdInt);
							ap.setIndex(apIdx);
							ap.setHotspotid(hotspot);
							ap.setMacaddr(macaddr);
							ap.setLocation(location);
							ap.setName(apName);
							ap.setIskey(isKeyInt);
							mysqlSession.insert("com.hxct.dao.AccesspointDao.save", ap);
							mysqlSession.commit();
						}
						else
						{
							ap.setAcid(acIdInt);
							ap.setIndex(apIdx);
							ap.setHotspotid(hotspot);
							ap.setLocation(location);
							ap.setName(apName);
							mysqlSession.update("com.hxct.dao.AccesspointDao.update", ap);
							mysqlSession.commit();
						}
						apMaps.put(ap.getId(), ap);
						apMacs.put(macaddr, ap);						
					}

				 }
				 JOptionPane.showMessageDialog(MainFrame.this, "批量导入结束");
			}
		}).start();
    }//GEN-LAST:event_batchImportActionPerformed

    private void addApBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_addApBtnActionPerformed
    {//GEN-HEADEREND:event_addApBtnActionPerformed
        AccesspointEntity ape = new AccesspointEntity();
		ape.setApsearial("");
		ape.setContact("");
		ape.setContactnumber("");
		ape.setCover("");
		ape.setGatewayloc("");
		ape.setHotspotid(aphotspot.getText());
		Object obj = acCombo.getSelectedItem();
		if(obj instanceof AcEntity)
		{
			ape.setAcid(((AcEntity)obj).getId());
		}
		else
		{
			JOptionPane.showMessageDialog(this, "请选择一台AC");
			return;
		}
		String apMac = apMacAddr.getText();
		if(apMac==null||apMac.trim().equals(""))
		{
			JOptionPane.showMessageDialog(this, "AP MAC地址不合法!");
			return;
		}
		Integer idx = idxMac.get(apMac.toLowerCase());
		if(idx==null||idx==0)
		{
			JOptionPane.showMessageDialog(this, "AP还没有关联AC，请重新填写相关信息!");
			return;
		}
		
		Map<String, String> cmaps = new HashMap<String, String>();
		cmaps.put("macaddr", apMac);
		cmaps.put("acid", ape.getAcid()+"");
		List<AccesspointEntity> apLst = mysqlSession.selectList("com.hxct.dao.AccesspointDao.queryList", cmaps);
		if(apLst.size()>0)
		{
			JOptionPane.showMessageDialog(this, "AP已存在，请确认相关信息!");
			return;
		}
		
		ape.setIndex(idx);
		ape.setIpaddress(apIpAddr.getText());
		ape.setIskey(isCustom.getSelectedIndex()==1?1:0);
		ape.setLatitude("");
		ape.setLocation(setupLoc.getText());
		ape.setLongitude("");
		ape.setMacaddr(apMac);
		ape.setModel("");
		ape.setName(apName.getText());
		ape.setOwnerunit("");
		mysqlSession.insert("com.hxct.dao.AccesspointDao.save", ape);
		mysqlSession.commit();
		apTableModel.addRow(new Object[]{ape.getId(), ape.getName(), ape.getIpaddress(), ape.getMacaddr(), acMaps.get(ape.getAcid()), ape.getHotspotid(), ape.getLocation(), ape.getIskey()==0?"否":"是"});
		apMaps.put(ape.getId(), ape);
		apMacs.put(apMac, ape);
		totalline.setText("累计"+apTableModel.getRowCount()+"行");
    }//GEN-LAST:event_addApBtnActionPerformed

    private void modifyApBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_modifyApBtnActionPerformed
    {//GEN-HEADEREND:event_modifyApBtnActionPerformed
        int selRow = apTable.getSelectedRow();
		if(selRow<0)
		{
			JOptionPane.showMessageDialog(this, "请选择一台需要修改的AP");
			return;
		}
		AccesspointEntity acs = apMaps.get(apTableModel.getValueAt(selRow, 0));
		ApDetailDialog adDialog = new ApDetailDialog(this, true, acs);
		adDialog.setLocationRelativeTo(null);
		adDialog.setVisible(true);
    }//GEN-LAST:event_modifyApBtnActionPerformed

    private void delApBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_delApBtnActionPerformed
    {//GEN-HEADEREND:event_delApBtnActionPerformed
         int selRow = apTable.getSelectedRow();
		if(selRow>-1)
		{
			int idx = (Integer)apTableModel.getValueAt(selRow, 0);
			AccesspointEntity aps = apMaps.get(idx);
			mysqlSession.delete("com.hxct.dao.AccesspointDao.delete", idx);
			mysqlSession.commit();
			apTableModel.removeRow(selRow);
			apMaps.remove(idx);
			apMacs.remove(aps.getMacaddr());
			totalline.setText("累计"+apTableModel.getRowCount()+"行");
		}
    }//GEN-LAST:event_delApBtnActionPerformed

    private void searchApBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_searchApBtnActionPerformed
    {//GEN-HEADEREND:event_searchApBtnActionPerformed
        String apNa = apName.getText();
		String apIp = apIpAddr.getText();
		String apMac = apMacAddr.getText();
//		String idx = apIdx.getText();
		Object ae = acCombo.getSelectedItem();
		int acid = 0;
		int iskey = isCustom.getSelectedIndex()==0?-1:(isCustom.getSelectedIndex()==1?1:0);
		if(ae instanceof AcEntity)
		{
			acid = ((AcEntity)ae).getId();
		}
		
		Map<String, String> cmaps = new HashMap<String, String>();
		cmaps.put("name", apNa);
		cmaps.put("ipaddr", apIp);
		cmaps.put("macaddr", apMac);
//		cmaps.put("index", idx);
		cmaps.put("location", setupLoc.getText());
		cmaps.put("acid", acid+"");
		cmaps.put("iskey", iskey+"");
		List<AccesspointEntity> apLst = mysqlSession.selectList("com.hxct.dao.AccesspointDao.queryList", cmaps);
		apMaps.clear();
		int rows = apTableModel.getRowCount();
		for(int i=0;i<rows;i++)
		{
			apTableModel.removeRow(0);
		}
		for(AccesspointEntity ap:apLst)
		{
			apMaps.put(ap.getId(), ap);
			apTableModel.addRow(new Object[]{ap.getId(), ap.getName(),ap.getIpaddress(),ap.getMacaddr(),acMaps.get(ap.getAcid()),ap.getHotspotid(),ap.getLocation(),ap.getIskey()==null?"否":(ap.getIskey()==1?"是":"否")});
		}
		totalline.setText("累计"+apLst.size()+"行");
    }//GEN-LAST:event_searchApBtnActionPerformed

    private void startBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_startBtnActionPerformed
    {//GEN-HEADEREND:event_startBtnActionPerformed
        if(startBtn.isSelected())
		{
	
			if(!saveAltNotify())
			{
				return;
			}
			startBtn.setText("关闭");
			JOptionPane.showMessageDialog(this, "任务已启动");
			int pollTimes = pollingTimes.getSelectedIndex()+1;
			QueueLink<AccesspointEntity> queue = new QueueLink<AccesspointEntity>();
			DevicePollManager.startJob(mysqlSession, intervalCb.getSelectedIndex(), queue);
			NotifyThread nt = new NotifyThread(queue, pollTimes, altNotify);
			Thread thread = new Thread(nt);
			thread.start();			
			enableControl(false);
		}
		else
		{
			startBtn.setText("启动");
			JOptionPane.showMessageDialog(this, "任务已停止");
			enableControl(true);
			DevicePollManager.stopJob(true);
		}
    }//GEN-LAST:event_startBtnActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt)//GEN-FIRST:event_formWindowClosing
    {//GEN-HEADEREND:event_formWindowClosing
	// 将托盘图标添加到系统的托盘实例中
		try {
			tray.add(trayIcon);
			System.out.println("关闭");
			setVisible(false);
		} catch (AWTException e1) {
			e1.printStackTrace();
		}		
    }//GEN-LAST:event_formWindowClosing

    private boolean saveAltNotify()
	{
		int type = -1;
		if(emailRb.isSelected())
			type = 0;
		else if(smsRb.isSelected())
			type = 1;
		else if(emailsmsRb.isSelected())
			type = 2;
		if(type==-1)
		{
			JOptionPane.showMessageDialog(this, "请选择一种通知方式!");
			startBtn.setSelected(false);
			return false;
		}
        if(altNotify==null)
		{
			altNotify = new AlertnotifyEntity();
		}
		altNotify.setType(type);
		altNotify.setSmtpserver(sendSvrAddr.getText());
		altNotify.setSmtpssl(isSSL.isSelected()?1:0);
		altNotify.setMailsender(senderMail.getText());
		altNotify.setMailpwd(sendPwd.getText());
		altNotify.setMailrecv(emailAddr.getText());
		altNotify.setMailtitle(emailTitle.getText());
		altNotify.setMailbody(emailMsg.getText());

		altNotify.setSmsrecvnumber(mobiles.getText());
		altNotify.setSmsmsg(smsMsg.getText());
		if(altNotify.getId()==null)
		{
			mysqlSession.insert("com.hxct.dao.AlertnotifyDao.save", altNotify);
		}
		else
		{
			mysqlSession.update("com.hxct.dao.AlertnotifyDao.update", altNotify);
		}		
		mysqlSession.commit();		
		return true;
	}
	/**
    * @param args the command line arguments
    */
    public static void main(String args[])
	{
//    	InputStream in = null;
//    	try {
//			in = Resources.getResourceAsStream("resource.properties");
//			System.getProperties().load(in);
//			in.close();
//		} catch (IOException e) {
//			// TODO Auto-generated catch block
//			e.printStackTrace();
//		}
		
        java.awt.EventQueue.invokeLater(new Runnable()
		{
            public void run()
			{
				try
				{ 
					org.jb2011.lnf.beautyeye.BeautyEyeLNFHelper.launchBeautyEyeLNF();
				} catch(Exception e)
				{ 
				//TODO exception 
				} 				
				MainFrame mf = new MainFrame();
                mf.setLocationRelativeTo(null);
				mf.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox acCombo;
    private javax.swing.JFormattedTextField acIpAddr;
    private javax.swing.JTextField acModel;
    private javax.swing.JTextField acName;
    private javax.swing.JTable acTable;
    private javax.swing.JButton addAcBtn;
    private javax.swing.JButton addApBtn;
    private javax.swing.JFormattedTextField apIpAddr;
    private javax.swing.JFormattedTextField apMacAddr;
    private javax.swing.JTextField apName;
    private javax.swing.JTable apTable;
    private javax.swing.JTextField aphotspot;
    private javax.swing.JButton batchImport;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton delAcBtn;
    private javax.swing.JButton delApBtn;
    private javax.swing.JTextField emailAddr;
    private javax.swing.JTextArea emailMsg;
    private javax.swing.JRadioButton emailRb;
    private javax.swing.JTextField emailTitle;
    private javax.swing.JRadioButton emailsmsRb;
    private javax.swing.JComboBox intervalCb;
    private javax.swing.JComboBox isCustom;
    private javax.swing.JCheckBox isSSL;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField mobiles;
    private javax.swing.JButton modifyAcBtn;
    private javax.swing.JButton modifyApBtn;
    private javax.swing.JComboBox pollingTimes;
    private javax.swing.JButton searchAcBtn;
    private javax.swing.JButton searchApBtn;
    private javax.swing.JTextField sendPwd;
    private javax.swing.JTextField sendSvrAddr;
    private javax.swing.JTextField senderMail;
    private javax.swing.JFormattedTextField setupLoc;
    private javax.swing.JTextArea smsMsg;
    private javax.swing.JRadioButton smsRb;
    private javax.swing.JToggleButton startBtn;
    private javax.swing.JLabel totalline;
    // End of variables declaration//GEN-END:variables

	private void initTable()
	{
		List<AcEntity> allAcs = mysqlSession.selectList("com.hxct.dao.AcDao.queryList");
		for(final AcEntity ac:allAcs)
		{
			acMaps.put(ac.getId(), ac);
			acTableModel.addRow(new Object[]{ac.getId(), ac.getName(),ac.getIpaddr(),ac.getModel()});
			acCombo.addItem(ac);
			new Thread(new Runnable(){

				@Override
				public void run()
				{
					while(true)
					{
						try
						{
							pollAc(ac);
							Thread.currentThread().sleep(1000*60*5);
						}
						catch(InterruptedException ex)
						{
							Logger.getLogger(MainFrame.class.getName()).
									log(Level.SEVERE, null, ex);
						}
					}
				}
			}).start();
		}
		List<AccesspointEntity> allAps = mysqlSession.selectList("com.hxct.dao.AccesspointDao.queryList");
		for(AccesspointEntity ap:allAps)
		{
			apMacs.put(ap.getMacaddr(), ap);
		}
		totalline.setText("累计0行");
	}

	private void pollAc(AcEntity ac)
	{		
		ISnmpClientFacade facade = new Snmp4JClientFacade();
		ISnmpSessionFactory sessionFactory = facade.getSnmpSessionFactory();
		ISnmpTargetFactory targetFactory = facade.getSnmpTargetFactory();
		ISnmpSession session = allSnmpSessions.get(ac.getId());
		try
		{
			if(session==null)
			{
				session = sessionFactory.newSnmpSession(targetFactory
					.newSnmpTarget(ac.getIpaddr(), ac.getSnmpport()));
				allSnmpSessions.put(ac.getId(), session);
			}
		}
		catch(IOException ex)
		{
			Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
		}
		String apMacOid = "";
		if(ac.getModel().equals("ZXWL"))
		{
			apMacOid = "1.3.6.1.4.1.3902.2505.1.1.15.102.1.1.1.3";
		}
		else
		{
			apMacOid = "1.3.6.1.4.1.3902.154.8.11.1.3.1.1.3.1.1.8";
		}
		List<VariableBinding> vars = session.getBulk(new String[]{apMacOid});
		for(VariableBinding vb:vars)
		{
			int idx = vb.getOid().last();
			String var = vb.getVariable().toString();
			idxMac.put(var, idx);
		}
	}

	public boolean modifyAcInfo(AcEntity ace)
	{
		mysqlSession.update("com.hxct.dao.AcDao.update", ace);
		mysqlSession.commit();
		acMaps.put(ace.getId(), ace);
		int selRow = acTable.getSelectedRow();
		acTableModel.setValueAt(ace.getId(), selRow, 0);
		acTableModel.setValueAt(ace.getName(), selRow, 1);
		acTableModel.setValueAt(ace.getIpaddr(), selRow, 2);
		acTableModel.setValueAt(ace.getModel(), selRow, 3);
		return true;
	}

	public boolean modifyApInfo(AccesspointEntity ape)
	{
		mysqlSession.update("com.hxct.dao.AccesspointDao.update", ape);
		mysqlSession.commit();
		apMaps.put(ape.getId(), ape);
		apMacs.put(ape.getMacaddr(), ape);
		int selRow = apTable.getSelectedRow();
		apTableModel.setValueAt(ape.getId(), selRow, 0);
		apTableModel.setValueAt(ape.getName(), selRow, 1);
		apTableModel.setValueAt(ape.getIpaddress(), selRow, 2);
		apTableModel.setValueAt(ape.getMacaddr(), selRow, 3);
		apTableModel.setValueAt(acMaps.get(ape.getAcid()), selRow, 4);
		apTableModel.setValueAt(ape.getHotspotid(), selRow, 5);
		apTableModel.setValueAt(ape.getLocation(), selRow, 6);
		apTableModel.setValueAt(ape.getIskey()==1?"是":"否", selRow, 7);
		return true;
	}	

	private void enableControl(boolean b)
	{
		jTabbedPane1.setEnabled(b);
		sendSvrAddr.setEnabled(b);
		isSSL.setEnabled(b);
		senderMail.setEnabled(b);
		sendPwd.setEnabled(b);
		intervalCb.setEnabled(b);
		pollingTimes.setEnabled(b);
		emailRb.setEnabled(b);
		smsRb.setEnabled(b);
		emailsmsRb.setEnabled(b);
		emailAddr.setEnabled(b);
		emailTitle.setEnabled(b);
		emailMsg.setEnabled(b);
		mobiles.setEnabled(b);
		smsMsg.setEnabled(b);
	}

	private void tray() {
	// 获得本操作系统托盘的实例
	tray = SystemTray.getSystemTray();
	// 显示在托盘中的图标
	ImageIcon icon = new ImageIcon(getClass().getClassLoader().getResource("notify.png"));
	// 构造一个右键弹出式菜单
	PopupMenu pop = new PopupMenu(); 
	MenuItem exit = new MenuItem("关闭程序");
	pop.add(exit);
	trayIcon = new TrayIcon(icon.getImage(),"重点AP关注告警系统\n版权所有：武汉虹信", pop);
	// 这句很重要，没有会导致图片显示不出来
	trayIcon.setImageAutoSize(true);
	trayIcon.addMouseListener(new MouseAdapter() {
		public void mouseClicked(MouseEvent e) {
			if(e.getClickCount() == 2){
				tray.remove(trayIcon);
				setVisible(true);
				// 还原成原来的窗口，而不是显示在任务栏
				setExtendedState(NORMAL);
			}
		}
	});
	exit.addActionListener(new ActionListener() {
		public void actionPerformed(ActionEvent e) {
			tray.remove(trayIcon);
			System.exit(0);
		}
		});
	}	
	private void initNotify()
	{
		altNotify = mysqlSession.selectOne("com.hxct.dao.AlertnotifyDao.queryObject", 1);
		if(altNotify!=null)
		{
			Integer anType = altNotify.getType();
			if(anType!=null)
			{
				switch(anType)
				{
					case 0:
						emailRb.setSelected(true);
						break;
					case 1:
						smsRb.setSelected(true);
						break;
					case 2:
						emailsmsRb.setSelected(true);
						break;
					default:
						break;
				}
			}
			//email
			sendSvrAddr.setText(altNotify.getSmtpserver());
			isSSL.setSelected(altNotify.getSmtpssl()==1);
			senderMail.setText(altNotify.getMailsender());
			sendPwd.setText(altNotify.getMailpwd());
			emailAddr.setText(altNotify.getMailrecv());
			emailTitle.setText(altNotify.getMailtitle());
			emailMsg.setText(altNotify.getMailbody());
			//sms
			mobiles.setText(altNotify.getSmsrecvnumber());
			smsMsg.setText(altNotify.getSmsmsg());
		}
	}
}
